{"version":3,"sources":["mainSpec.es2015.js"],"names":[],"mappings":"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","file":"mainSpec.js","sourcesContent":["xdescribe(\"enumerate\", function() {\n  it(\"properly enumerates\", function() {});\n});\n\ndescribe(\"CDLLwS.Node class\", function() {\n  it(\"can be instantiated\", function() {\n    expect(() => {\n      new CDLLwS.Node();\n    }).not.toThrow();\n  });\n});\n\ndescribe(\"CDLLwS.Node instance\", function() {\n  it(\"can be printed\", function() {\n  \tlet n = new CDLLwS.Node(\"qwerty\");\n  \texpect(String(n)).toEqual(\"qwerty\");\n\n  \tn.data = \"\";\n  \texpect(String(n)).toEqual(\"\");\n\n  \tn.data = 123;\n  \texpect(String(n)).toEqual(\"123\");\n\n  \tn.data = null;\n  \texpect(String(n)).toEqual(String(null));\n  });\n});\n\ndescribe(\"CDLLwS class\", function() {\n  it(\"can be instantiated\", function() {\n    expect(() => {\n      new CDLLwS();\n    }).not.toThrow();\n  });\n\n  it(\"has a sentinel node\", function() {\n    let x = new CDLLwS();\n    expect(x.sentinel instanceof CDLLwS.Node).toBe(true);\n  });\n});\n\ndescribe(\"CDLLwS instance\", function() {\n\n  it(\"is an iterable\", function() {\n    expect(() => {\n      let x = new CDLLwS();\n      for(let i of x) {}\n    }).not.toThrow();\n  });\n\n  it(\"is an iterable and can return Node instances\", function() {\n    let x = new CDLLwS();\n    let tot = 100;\n    for(let i=0; i<tot; i++) {\n      var val = Math.random();\n      x.append(val);\n    }\n    //console.log(x, Symbol.iterator, x[Symbol.iterator]);\n    for(let y of x[Symbol.iterator](true)) {\n      console.log(\"--->\", y);\n      expect(y instanceof CDLLwS.Node).toBe(true);\n    }\n  });\n\n  it(\"stores its length\", function() {\n    let x = new CDLLwS();\n    expect(x.length).toEqual(0);\n\n    let tot = 100;\n    for(let i=0; i<tot; i++) {\n      var val = Math.random();\n      x.append(val);\n    }\n    expect(x.length).toEqual(tot);    \n  });\n\n  it(\"appends values -> correct length\", function() {\n    let x = new CDLLwS();\n    let tot = 100;\n\n    expect(() => {\n      for(let i=0; i<tot; i++) {\n        var val = Math.random();\n        x.append(val);\n      }\n    }).not.toThrow();\n\n    expect(x.length).toEqual(tot);\n  });\n\n  xit(\"gets values\", function() {\n    let x = new CDLLwS();\n    x.append(1);\n    x.append(\"a\");\n    x.append(null);\n    x.append(undefined);\n    x.append(\"z\");\n    \n    expect(x.get(0)).toEqual(1);\n    expect(x.get(1)).toEqual(\"a\");\n    expect(x.get(2)).toEqual(null);\n    expect(x.get(3)).toEqual(undefined);\n    expect(x.get(4)).toEqual(\"z\");\n    expect(x.get(-1)).toEqual(\"z\");\n    expect(() => { x.get(-2) }).toThrow();\n    expect(() => { x.get(x.length) }).toThrow();\n    expect(() => { x.get(x.length + 1) }).toThrow();\n  });\n\n  xit(\"inserts values\", function() {\n    let x = new CDLLwS();\n    let tot = 100;\n    for(let i=0; i<tot; i++) {\n      x.append(true);\n    }\n\n    console.log(\"22222222222222\");\n    for(let i=0; i<10; i++) {\n      let index = Math.floor(Math.random() * x.length) - 1;\n      let value = Math.random() * 1000000;\n      console.log(\"---------------\");\n      console.log(index, value);\n      console.log(\"---\");\n      x.insert(index, value);\n      expect(x.get(index)).toEqual(value);\n    }\n\n  });\n});"],"sourceRoot":"/source/"}